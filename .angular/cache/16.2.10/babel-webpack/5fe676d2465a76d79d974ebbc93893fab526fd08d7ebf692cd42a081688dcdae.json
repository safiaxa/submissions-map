{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, EventEmitter, Input, NgZone, Output } from '@angular/core';\nimport { Layer } from 'leaflet';\nimport { LeafletDirective } from '../core/leaflet.directive';\nimport { LeafletDirectiveWrapper } from '../core/leaflet.directive.wrapper';\nimport { LeafletUtil } from '../core/leaflet.util';\n/**\n * Layer directive\n *\n * This directive is used to directly control a single map layer. The purpose of this directive is to\n * be used as part of a child structural directive of the map element.\n *\n */\nvar LeafletLayerDirective = /** @class */function () {\n  function LeafletLayerDirective(leafletDirective, zone) {\n    this.zone = zone;\n    // Layer Events\n    this.onAdd = new EventEmitter();\n    this.onRemove = new EventEmitter();\n    this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n  }\n  LeafletLayerDirective.prototype.ngOnInit = function () {\n    // Init the map\n    this.leafletDirective.init();\n  };\n  LeafletLayerDirective.prototype.ngOnDestroy = function () {\n    this.layer.remove();\n  };\n  LeafletLayerDirective.prototype.ngOnChanges = function (changes) {\n    var _this = this;\n    if (changes['layer']) {\n      // Update the layer\n      var p_1 = changes['layer'].previousValue;\n      var n_1 = changes['layer'].currentValue;\n      this.zone.runOutsideAngular(function () {\n        if (null != p_1) {\n          p_1.remove();\n        }\n        if (null != n_1) {\n          _this.addLayerEventListeners(n_1);\n          _this.leafletDirective.getMap().addLayer(n_1);\n        }\n      });\n    }\n  };\n  LeafletLayerDirective.prototype.addLayerEventListeners = function (l) {\n    var _this = this;\n    l.on('add', function (e) {\n      return LeafletUtil.handleEvent(_this.zone, _this.onAdd, e);\n    });\n    l.on('remove', function (e) {\n      return LeafletUtil.handleEvent(_this.zone, _this.onRemove, e);\n    });\n  };\n  __decorate([Input('leafletLayer'), __metadata(\"design:type\", Layer)], LeafletLayerDirective.prototype, \"layer\", void 0);\n  __decorate([Output('leafletLayerAdd'), __metadata(\"design:type\", Object)], LeafletLayerDirective.prototype, \"onAdd\", void 0);\n  __decorate([Output('leafletLayerRemove'), __metadata(\"design:type\", Object)], LeafletLayerDirective.prototype, \"onRemove\", void 0);\n  LeafletLayerDirective = __decorate([Directive({\n    selector: '[leafletLayer]'\n  }), __metadata(\"design:paramtypes\", [LeafletDirective, NgZone])], LeafletLayerDirective);\n  return LeafletLayerDirective;\n}();\nexport { LeafletLayerDirective };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","Directive","EventEmitter","Input","NgZone","Output","Layer","LeafletDirective","LeafletDirectiveWrapper","LeafletUtil","LeafletLayerDirective","leafletDirective","zone","onAdd","onRemove","prototype","ngOnInit","init","ngOnDestroy","layer","remove","ngOnChanges","changes","_this","p_1","previousValue","n_1","currentValue","runOutsideAngular","addLayerEventListeners","getMap","addLayer","l","on","e","handleEvent","selector"],"sources":["C:/Users/safia/submissions_map/submissions_map/node_modules/@asymmetrik/ngx-leaflet/dist/leaflet/layers/leaflet-layer.directive.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, EventEmitter, Input, NgZone, Output } from '@angular/core';\nimport { Layer } from 'leaflet';\nimport { LeafletDirective } from '../core/leaflet.directive';\nimport { LeafletDirectiveWrapper } from '../core/leaflet.directive.wrapper';\nimport { LeafletUtil } from '../core/leaflet.util';\n/**\n * Layer directive\n *\n * This directive is used to directly control a single map layer. The purpose of this directive is to\n * be used as part of a child structural directive of the map element.\n *\n */\nvar LeafletLayerDirective = /** @class */ (function () {\n    function LeafletLayerDirective(leafletDirective, zone) {\n        this.zone = zone;\n        // Layer Events\n        this.onAdd = new EventEmitter();\n        this.onRemove = new EventEmitter();\n        this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n    }\n    LeafletLayerDirective.prototype.ngOnInit = function () {\n        // Init the map\n        this.leafletDirective.init();\n    };\n    LeafletLayerDirective.prototype.ngOnDestroy = function () {\n        this.layer.remove();\n    };\n    LeafletLayerDirective.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (changes['layer']) {\n            // Update the layer\n            var p_1 = changes['layer'].previousValue;\n            var n_1 = changes['layer'].currentValue;\n            this.zone.runOutsideAngular(function () {\n                if (null != p_1) {\n                    p_1.remove();\n                }\n                if (null != n_1) {\n                    _this.addLayerEventListeners(n_1);\n                    _this.leafletDirective.getMap().addLayer(n_1);\n                }\n            });\n        }\n    };\n    LeafletLayerDirective.prototype.addLayerEventListeners = function (l) {\n        var _this = this;\n        l.on('add', function (e) { return LeafletUtil.handleEvent(_this.zone, _this.onAdd, e); });\n        l.on('remove', function (e) { return LeafletUtil.handleEvent(_this.zone, _this.onRemove, e); });\n    };\n    __decorate([\n        Input('leafletLayer'),\n        __metadata(\"design:type\", Layer)\n    ], LeafletLayerDirective.prototype, \"layer\", void 0);\n    __decorate([\n        Output('leafletLayerAdd'),\n        __metadata(\"design:type\", Object)\n    ], LeafletLayerDirective.prototype, \"onAdd\", void 0);\n    __decorate([\n        Output('leafletLayerRemove'),\n        __metadata(\"design:type\", Object)\n    ], LeafletLayerDirective.prototype, \"onRemove\", void 0);\n    LeafletLayerDirective = __decorate([\n        Directive({\n            selector: '[leafletLayer]'\n        }),\n        __metadata(\"design:paramtypes\", [LeafletDirective, NgZone])\n    ], LeafletLayerDirective);\n    return LeafletLayerDirective;\n}());\nexport { LeafletLayerDirective };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}