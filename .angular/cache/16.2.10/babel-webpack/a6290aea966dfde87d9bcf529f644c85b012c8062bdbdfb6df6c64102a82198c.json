{"ast":null,"code":"import { __decorate } from \"tslib\";\nexport let MapViewComponent = class MapViewComponent {\n  constructor() {\n    this.filteredCards = []; // Use the custom type/interface here\n  }\n\n  ngOnChanges(changes) {\n    if (changes.filteredCards && changes.filteredCards.currentValue) {\n      this.updateMap();\n    }\n  }\n  updateMap() {\n    // Clear previous markers\n    if (this.map) {\n      this.map.eachLayer(layer => {\n        if (layer instanceof L.Marker) {\n          this.map.removeLayer(layer);\n        }\n      });\n    }\n    // Create new markers for filtered cards\n    this.filteredCards.forEach(card => {\n      const {\n        latitude,\n        longitude\n      } = card.location; // Assuming each card has a 'location' property with 'latitude' and 'longitude'\n      const marker = L.marker([latitude, longitude]).addTo(this.map);\n      // You can customize the marker, add popups, etc. here\n      marker.bindPopup(`<b>${card.title}</b><br>${card.from}`);\n    });\n  }\n  ngAfterViewInit() {\n    // Initialize the map\n    this.map = L.map('leaflet-map');\n    // Check if there are filtered cards\n    if (this.filteredCards.length > 0) {\n      const firstCard = this.filteredCards[0];\n      const {\n        latitude,\n        longitude\n      } = firstCard.location; // Assuming each card has a 'location' property with 'latitude' and 'longitude'\n      // Set the view based on the coordinates of the first card\n      this.map.setView([latitude, longitude], 10); // Adjust the zoom level (10 in this case) as needed\n    } else {\n      // If no filtered cards, set a default view\n      this.map.setView([0, 0], 2);\n    }\n    // Add a tile layer (you can choose other providers)\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(this.map);\n  }\n};\n__decorate([Input()], MapViewComponent.prototype, \"filteredCards\", void 0);\nMapViewComponent = __decorate([Component({\n  selector: 'app-map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.css']\n})], MapViewComponent);","map":{"version":3,"names":["MapViewComponent","constructor","filteredCards","ngOnChanges","changes","currentValue","updateMap","map","eachLayer","layer","L","Marker","removeLayer","forEach","card","latitude","longitude","location","marker","addTo","bindPopup","title","from","ngAfterViewInit","length","firstCard","setView","tileLayer","attribution","__decorate","Input","Component","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\safia\\submissions_map\\submissions_map\\src\\app\\map-view\\map-view.component.ts"],"sourcesContent":["// Create a custom interface for your card\ninterface Card {\n  title: string;\n  from: string;\n  location: {\n    latitude: number;\n    longitude: number;\n  };\n  // Add other properties as needed\n}\n\n@Component({\n  selector: 'app-map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.css'],\n})\nexport class MapViewComponent implements OnChanges {\n  @Input() filteredCards: Card[] = []; // Use the custom type/interface here\n\n  private map: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.filteredCards && changes.filteredCards.currentValue) {\n      this.updateMap();\n    }\n  }\n\n  private updateMap(): void {\n    // Clear previous markers\n    if (this.map) {\n      this.map.eachLayer((layer: any) => {\n        if (layer instanceof L.Marker) {\n          this.map.removeLayer(layer);\n        }\n      });\n    }\n\n    // Create new markers for filtered cards\n    this.filteredCards.forEach((card) => {\n      const { latitude, longitude } = card.location; // Assuming each card has a 'location' property with 'latitude' and 'longitude'\n      const marker = L.marker([latitude, longitude]).addTo(this.map);\n\n      // You can customize the marker, add popups, etc. here\n      marker.bindPopup(`<b>${card.title}</b><br>${card.from}`);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    // Initialize the map\n    this.map = L.map('leaflet-map');\n  \n    // Check if there are filtered cards\n    if (this.filteredCards.length > 0) {\n      const firstCard = this.filteredCards[0];\n      const { latitude, longitude } = firstCard.location; // Assuming each card has a 'location' property with 'latitude' and 'longitude'\n  \n      // Set the view based on the coordinates of the first card\n      this.map.setView([latitude, longitude], 10); // Adjust the zoom level (10 in this case) as needed\n    } else {\n      // If no filtered cards, set a default view\n      this.map.setView([0, 0], 2);\n    }\n  \n    // Add a tile layer (you can choose other providers)\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors',\n    }).addTo(this.map);\n  }\n  \n}\n"],"mappings":";AAgBO,WAAMA,gBAAgB,GAAtB,MAAMA,gBAAgB;EAAtBC,YAAA;IACI,KAAAC,aAAa,GAAW,EAAE,CAAC,CAAC;EAoDvC;;EAhDEC,WAAWA,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAACF,aAAa,IAAIE,OAAO,CAACF,aAAa,CAACG,YAAY,EAAE;MAC/D,IAAI,CAACC,SAAS,EAAE;;EAEpB;EAEQA,SAASA,CAAA;IACf;IACA,IAAI,IAAI,CAACC,GAAG,EAAE;MACZ,IAAI,CAACA,GAAG,CAACC,SAAS,CAAEC,KAAU,IAAI;QAChC,IAAIA,KAAK,YAAYC,CAAC,CAACC,MAAM,EAAE;UAC7B,IAAI,CAACJ,GAAG,CAACK,WAAW,CAACH,KAAK,CAAC;;MAE/B,CAAC,CAAC;;IAGJ;IACA,IAAI,CAACP,aAAa,CAACW,OAAO,CAAEC,IAAI,IAAI;MAClC,MAAM;QAAEC,QAAQ;QAAEC;MAAS,CAAE,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;MAC/C,MAAMC,MAAM,GAAGR,CAAC,CAACQ,MAAM,CAAC,CAACH,QAAQ,EAAEC,SAAS,CAAC,CAAC,CAACG,KAAK,CAAC,IAAI,CAACZ,GAAG,CAAC;MAE9D;MACAW,MAAM,CAACE,SAAS,CAAC,MAAMN,IAAI,CAACO,KAAK,WAAWP,IAAI,CAACQ,IAAI,EAAE,CAAC;IAC1D,CAAC,CAAC;EACJ;EAEAC,eAAeA,CAAA;IACb;IACA,IAAI,CAAChB,GAAG,GAAGG,CAAC,CAACH,GAAG,CAAC,aAAa,CAAC;IAE/B;IACA,IAAI,IAAI,CAACL,aAAa,CAACsB,MAAM,GAAG,CAAC,EAAE;MACjC,MAAMC,SAAS,GAAG,IAAI,CAACvB,aAAa,CAAC,CAAC,CAAC;MACvC,MAAM;QAAEa,QAAQ;QAAEC;MAAS,CAAE,GAAGS,SAAS,CAACR,QAAQ,CAAC,CAAC;MAEpD;MACA,IAAI,CAACV,GAAG,CAACmB,OAAO,CAAC,CAACX,QAAQ,EAAEC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KAC9C,MAAM;MACL;MACA,IAAI,CAACT,GAAG,CAACmB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;IAG7B;IACAhB,CAAC,CAACiB,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;KACd,CAAC,CAACT,KAAK,CAAC,IAAI,CAACZ,GAAG,CAAC;EACpB;CAED;AApDUsB,UAAA,EAARC,KAAK,EAAE,C,sDAA4B;AADzB9B,gBAAgB,GAAA6B,UAAA,EAL5BE,SAAS,CAAC;EACTC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWlC,gBAAgB,CAqD5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}