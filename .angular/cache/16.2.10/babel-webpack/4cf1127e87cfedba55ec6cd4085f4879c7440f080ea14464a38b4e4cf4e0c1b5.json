{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction FilterBarComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const title_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", title_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(title_r2);\n  }\n}\nfunction FilterBarComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r3);\n  }\n}\nexport class FilterBarComponent {\n  constructor() {\n    this.searchTerm = '';\n    this.selectedTitle = '';\n    this.selectedStatus = '';\n    this.selectedDate = '';\n    this.uniqueTitles = [];\n    this.uniqueStatus = [];\n  }\n  ngOnInit() {\n    // Populate uniqueTitles and uniqueStatus from cards data\n    this.uniqueTitles = [...new Set(this.cards.submissionCards.map(card => card.title))];\n    this.uniqueStatus = [...new Set(this.cards.submissionCards.map(card => card.status))];\n  }\n  static #_ = this.ɵfac = function FilterBarComponent_Factory(t) {\n    return new (t || FilterBarComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilterBarComponent,\n    selectors: [[\"app-filter-bar\"]],\n    inputs: {\n      cards: \"cards\"\n    },\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"filter-bar\"], [\"type\", \"text\", \"placeholder\", \"Search\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"]],\n    template: function FilterBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterBarComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.searchTerm = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n        i0.ɵɵtext(4, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterBarComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.selectedTitle = $event;\n        });\n        i0.ɵɵelementStart(6, \"option\", 3);\n        i0.ɵɵtext(7, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, FilterBarComponent_option_8_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n        i0.ɵɵtext(11, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterBarComponent_Template_select_ngModelChange_12_listener($event) {\n          return ctx.selectedStatus = $event;\n        });\n        i0.ɵɵelementStart(13, \"option\", 3);\n        i0.ɵɵtext(14, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, FilterBarComponent_option_15_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\")(17, \"label\");\n        i0.ɵɵtext(18, \"Due Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterBarComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.selectedDate = $event;\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchTerm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.uniqueTitles);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedStatus);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.uniqueStatus);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedDate);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","title_r2","ɵɵadvance","ɵɵtextInterpolate","status_r3","FilterBarComponent","constructor","searchTerm","selectedTitle","selectedStatus","selectedDate","uniqueTitles","uniqueStatus","ngOnInit","Set","cards","submissionCards","map","card","title","status","_","_2","selectors","inputs","decls","vars","consts","template","FilterBarComponent_Template","rf","ctx","ɵɵlistener","FilterBarComponent_Template_input_ngModelChange_1_listener","$event","FilterBarComponent_Template_select_ngModelChange_5_listener","ɵɵtemplate","FilterBarComponent_option_8_Template","FilterBarComponent_Template_select_ngModelChange_12_listener","FilterBarComponent_option_15_Template","FilterBarComponent_Template_input_ngModelChange_19_listener"],"sources":["C:\\Users\\safia\\submissions_map\\submissions_map\\src\\app\\filter-bar\\filter-bar.component.ts","C:\\Users\\safia\\submissions_map\\submissions_map\\src\\app\\filter-bar\\filter-bar.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { SubmissionCardsComponent } from '../submission-cards/submission-cards.component';\n\n@Component({\n  selector: 'app-filter-bar',\n  templateUrl: './filter-bar.component.html',\n  styleUrls: ['./filter-bar.component.css'],\n})\nexport class FilterBarComponent implements OnInit {\n  @Input() cards: SubmissionCardsComponent;\n\n  searchTerm: string = '';\n  selectedTitle: string = '';\n  selectedStatus: string = '';\n  selectedDate: string = '';\n\n  uniqueTitles: string[] = [];\n  uniqueStatus: string[] = [];\n\n  ngOnInit(): void {\n    // Populate uniqueTitles and uniqueStatus from cards data\n    this.uniqueTitles = [...new Set(this.cards.submissionCards.map((card) => card.title))];\n    this.uniqueStatus = [...new Set(this.cards.submissionCards.map((card) => card.status))];\n  }\n}\n","<div class=\"filter-bar\">\n    <!-- Search Bar -->\n    <input type=\"text\" [(ngModel)]=\"searchTerm\" placeholder=\"Search\" />\n  \n    <!-- Title Filter -->\n    <div>\n      <label>Title:</label>\n      <select [(ngModel)]=\"selectedTitle\">\n        <option value=\"\">All</option>\n        <option *ngFor=\"let title of uniqueTitles\" [value]=\"title\">{{ title }}</option>\n      </select>\n    </div>\n  \n    <!-- Status Filter -->\n    <div>\n      <label>Status:</label>\n      <select [(ngModel)]=\"selectedStatus\">\n        <option value=\"\">All</option>\n        <option *ngFor=\"let status of uniqueStatus\" [value]=\"status\">{{ status }}</option>\n      </select>\n    </div>\n  \n    <!-- Date Filter -->\n    <div>\n      <label>Due Date:</label>\n      <input type=\"date\" [(ngModel)]=\"selectedDate\" />\n    </div>\n  </div>\n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}