{"ast":null,"code":"import { SubmissionCardsComponent } from '../submission-cards/submission-cards.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction FilterBarComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const title_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", title_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(title_r2);\n  }\n}\nfunction FilterBarComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const text_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", text_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(text_r3);\n  }\n}\nexport class FilterBarComponent {\n  constructor() {\n    this.cards = new SubmissionCardsComponent(); // Provide a default value\n    this.searchTerm = '';\n    this.selectedTitle = '';\n    this.selectedStatus = '';\n    this.selectedDate = '';\n    this.uniqueTitles = [];\n    this.uniqueStatus = [];\n    this.filteredCards = [];\n  }\n  ngOnInit() {\n    // Populate uniqueTitles and uniqueStatus from cards data\n    this.uniqueTitles = [...new Set(this.cards.submissionCards.map(card => card.title))];\n    this.uniqueStatus = [...new Set(this.cards.submissionCards.map(card => card.status))];\n    this.filteredCards = this.cards.submissionCards; // Initialize filteredCards with all cards\n  }\n\n  applyFilters() {\n    // Apply filters based on selected criteria\n    this.filteredCards = this.cards.submissionCards.filter(card => card.title.toLowerCase().includes(this.selectedTitle.toLowerCase()) || card.from.toLowerCase().includes(this.searchTerm.toLowerCase())).filter(card => !this.selectedStatus || card.status === this.selectedStatus).filter(card => !this.selectedDate || new Date(card.dueDate).toDateString() === new Date(this.selectedDate).toDateString());\n  }\n  static #_ = this.ɵfac = function FilterBarComponent_Factory(t) {\n    return new (t || FilterBarComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilterBarComponent,\n    selectors: [[\"app-filter-bar\"]],\n    inputs: {\n      cards: \"cards\"\n    },\n    decls: 14,\n    vars: 6,\n    consts: [[1, \"filter-bar\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"filter-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"filter-dropdown\"], [2, \"color\", \"gray\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [\"style\", \"color:black\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"filter-datepicker\"], [\"type\", \"date\", 2, \"color\", \"gray\", 3, \"ngModel\", \"ngModelChange\"], [2, \"color\", \"black\", 3, \"value\"]],\n    template: function FilterBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterBarComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.searchTerm = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterBarComponent_Template_select_ngModelChange_3_listener($event) {\n          return ctx.selectedTitle = $event;\n        });\n        i0.ɵɵelementStart(4, \"option\", 4);\n        i0.ɵɵtext(5, \"Select Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FilterBarComponent_option_6_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterBarComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.selectedStatus = $event;\n        });\n        i0.ɵɵelementStart(9, \"option\", 4);\n        i0.ɵɵtext(10, \"Select Status \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, FilterBarComponent_option_11_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function FilterBarComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.selectedDate = $event;\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchTerm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.uniqueTitles);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedStatus);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.uniqueStatus);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedDate);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"\\n\\n.filter-bar[_ngcontent-%COMP%] {\\n    display: flex;\\n    background-color: white; \\n\\n    border-radius: 8px; \\n\\n    margin-top: 10px; \\n\\n    padding: 10px; \\n\\n  }\\n  \\n  .filter-input[_ngcontent-%COMP%], .filter-dropdown[_ngcontent-%COMP%], .filter-datepicker[_ngcontent-%COMP%] {\\n    margin-right: 40px; \\n\\n  }\\n  \\n  .filter-dropdown[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .filter-datepicker[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    margin-left: 10px; \\n\\n   \\n\\n  }\\n  \\n  .filter-input[_ngcontent-%COMP%] {\\n    padding: 8px;\\n    border: 1px solid gray;\\n    border-radius: 4px;\\n  }\\n  \\n  .filter-dropdown[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .filter-datepicker[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    padding: 8px;\\n    border: 1px solid gray;\\n    border-radius: 4px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmlsdGVyLWJhci9maWx0ZXItYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCO0FBQzdCO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QixFQUFFLDBCQUEwQjtJQUNuRCxrQkFBa0IsRUFBRSx5QkFBeUI7SUFDN0MsZ0JBQWdCLEVBQUUscUJBQXFCO0lBQ3ZDLGFBQWEsRUFBRSxnRUFBZ0U7RUFDakY7O0VBRUE7OztJQUdFLGtCQUFrQixFQUFFLHFCQUFxQjtFQUMzQzs7RUFFQTs7SUFFRSxpQkFBaUIsRUFBRSxxQkFBcUI7R0FDekMsMkJBQTJCO0VBQzVCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7O0lBRUUsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBmaWx0ZXItYmFyLmNvbXBvbmVudC5jc3MgKi9cclxuLmZpbHRlci1iYXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyAvKiBMaWdodCBncmF5IGJhY2tncm91bmQgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDsgLyogU2xpZ2h0IGJvcmRlciByYWRpdXMgKi9cclxuICAgIG1hcmdpbi10b3A6IDEwcHg7IC8qIEFkanVzdCBhcyBuZWVkZWQgKi9cclxuICAgIHBhZGRpbmc6IDEwcHg7IC8qIEFkZCBwYWRkaW5nIHRvIHByb3ZpZGUgc3BhY2UgYmV0d2VlbiB0aGUgY29udGVudCBhbmQgYm9yZGVyICovXHJcbiAgfVxyXG4gIFxyXG4gIC5maWx0ZXItaW5wdXQsXHJcbiAgLmZpbHRlci1kcm9wZG93bixcclxuICAuZmlsdGVyLWRhdGVwaWNrZXIge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA0MHB4OyAvKiBBZGp1c3QgYXMgbmVlZGVkICovXHJcbiAgfVxyXG4gIFxyXG4gIC5maWx0ZXItZHJvcGRvd24gbGFiZWwsXHJcbiAgLmZpbHRlci1kYXRlcGlja2VyIGxhYmVsIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyAvKiBBZGp1c3QgYXMgbmVlZGVkICovXHJcbiAgIC8qIFNldCB0ZXh0IGNvbG9yIHRvIGdyYXkgKi9cclxuICB9XHJcbiAgXHJcbiAgLmZpbHRlci1pbnB1dCB7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIH1cclxuICBcclxuICAuZmlsdGVyLWRyb3Bkb3duIHNlbGVjdCxcclxuICAuZmlsdGVyLWRhdGVwaWNrZXIgaW5wdXQge1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["SubmissionCardsComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","title_r2","ɵɵadvance","ɵɵtextInterpolate","text_r3","FilterBarComponent","constructor","cards","searchTerm","selectedTitle","selectedStatus","selectedDate","uniqueTitles","uniqueStatus","filteredCards","ngOnInit","Set","submissionCards","map","card","title","status","applyFilters","filter","toLowerCase","includes","from","Date","dueDate","toDateString","_","_2","selectors","inputs","decls","vars","consts","template","FilterBarComponent_Template","rf","ctx","ɵɵlistener","FilterBarComponent_Template_input_ngModelChange_1_listener","$event","FilterBarComponent_Template_select_ngModelChange_3_listener","ɵɵtemplate","FilterBarComponent_option_6_Template","FilterBarComponent_Template_select_ngModelChange_8_listener","FilterBarComponent_option_11_Template","FilterBarComponent_Template_input_ngModelChange_13_listener"],"sources":["C:\\Users\\safia\\submissions_map\\submissions_map\\src\\app\\filter-bar\\filter-bar.component.ts","C:\\Users\\safia\\submissions_map\\submissions_map\\src\\app\\filter-bar\\filter-bar.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { SubmissionCardsComponent } from '../submission-cards/submission-cards.component';\n\n@Component({\n  selector: 'app-filter-bar',\n  templateUrl: './filter-bar.component.html',\n  styleUrls: ['./filter-bar.component.css'],\n})\nexport class FilterBarComponent implements OnInit {\n  @Input() cards: SubmissionCardsComponent = new SubmissionCardsComponent(); // Provide a default value\n\n  searchTerm: string = '';\n  selectedTitle: string = '';\n  selectedStatus: string = '';\n  selectedDate: string = '';\n\n  uniqueTitles: string[] = [];\n  uniqueStatus: string[] = [];\n  filteredCards: any[] = [];\n\n  ngOnInit(): void {\n    // Populate uniqueTitles and uniqueStatus from cards data\n    this.uniqueTitles = [...new Set(this.cards.submissionCards.map((card) => card.title))];\n    this.uniqueStatus = [...new Set(this.cards.submissionCards.map((card) => card.status))];\n    this.filteredCards = this.cards.submissionCards; // Initialize filteredCards with all cards\n  }\n\n  applyFilters(): void {\n    // Apply filters based on selected criteria\n    this.filteredCards = this.cards.submissionCards\n      .filter((card) =>\n        card.title.toLowerCase().includes(this.selectedTitle.toLowerCase()) ||\n        card.from.toLowerCase().includes(this.searchTerm.toLowerCase())\n      )\n      .filter((card) => !this.selectedStatus || card.status === this.selectedStatus)\n      .filter((card) => !this.selectedDate || new Date(card.dueDate).toDateString() === new Date(this.selectedDate).toDateString());\n  }\n}\n\n","<!-- filter-bar.component.html -->\n<div class=\"filter-bar\">\n    <!-- Search Bar -->\n    <input type=\"text\" [(ngModel)]=\"searchTerm\" placeholder=\"Search\" class=\"filter-input\" />\n  \n    <!-- Title Filter -->\n    <div class=\"filter-dropdown\">\n      <select style=\"color:gray\" [(ngModel)]=\"selectedTitle\" >\n        <option value=\"\">Select Form</option>\n        <option style=\"color:black\" *ngFor=\"let title of uniqueTitles\" [value]=\"title\">{{ title }}</option>\n      </select>\n    </div>\n  \n    <!-- Status Filter -->\n    <div class=\"filter-dropdown\">\n      <select  style=\"color:gray\" [(ngModel)]=\"selectedStatus\">\n        <option value=\"\">Select Status </option>\n        <option style=\"color:black\" *ngFor=\"let text of uniqueStatus\" [value]=\"text\" >{{ text }}</option>\n      </select>\n    </div>\n  \n    <!-- Date Filter -->\n    <div class=\"filter-datepicker\">\n    <input style=\"color:gray\" [(ngModel)]=\"selectedDate\" type=\"date\"  />\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}