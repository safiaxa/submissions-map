{"ast":null,"code":"import { __decorate } from \"tslib\";\n// filter-bar.component.ts\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport let FilterBarComponent = class FilterBarComponent {\n  constructor() {\n    this.cards = []; // Change the type to an array of cards\n    this.filteredData = new EventEmitter();\n    this.searchTerm = '';\n    this.selectedTitle = '';\n    this.selectedStatus = '';\n    this.selectedDate = '';\n    this.uniqueTitles = [];\n    this.uniqueStatus = [];\n    this.filteredCards = [];\n  }\n  ngOnInit() {\n    // Populate uniqueTitles and uniqueStatus from cards data\n    this.uniqueTitles = [...new Set(this.cards.map(card => card.title))];\n    this.uniqueStatus = [...new Set(this.cards.map(card => card.status))];\n    this.filteredCards = this.cards; // Initialize filteredCards with all cards\n  }\n\n  applyFilters() {\n    // Apply filters based on selected criteria\n    this.filteredCards = this.cards.filter(card => card.title.toLowerCase().includes(this.selectedTitle.toLowerCase()) || card.from.toLowerCase().includes(this.searchTerm.toLowerCase())).filter(card => !this.selectedStatus || card.status === this.selectedStatus).filter(card => !this.selectedDate || new Date(card.dueDate).toDateString() === new Date(this.selectedDate).toDateString());\n    // Emit the filtered data to the parent component\n    this.filteredData.emit(this.filteredCards);\n  }\n  exportToHTML() {\n    // Create a simple HTML table\n    const table = `\n      <table>\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>From</th>\n            <th>To</th>\n            <th>Due Date</th>\n            <th>Status</th>\n            <th>Text</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${this.filteredCards.map(card => `\n            <tr>\n              <td>${card.title}</td>\n              <td>${card.from}</td>\n              <td>${card.to}</td>\n              <td>${card.dueDate}</td>\n              <td>${card.status}</td>\n              <td>${card.text}</td>\n            </tr>\n          `).join('')}\n        </tbody>\n      </table>\n    `;\n    // Create a Blob containing the HTML table\n    const blob = new Blob([table], {\n      type: 'text/html'\n    });\n    // Create a download link\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = 'exported_data.html';\n    // Append the link to the body and trigger the click event\n    document.body.appendChild(a);\n    a.click();\n    // Remove the link from the body\n    document.body.removeChild(a);\n  }\n};\n__decorate([Input()], FilterBarComponent.prototype, \"cards\", void 0);\n__decorate([Output()], FilterBarComponent.prototype, \"filteredData\", void 0);\nFilterBarComponent = __decorate([Component({\n  selector: 'app-filter-bar',\n  templateUrl: './filter-bar.component.html',\n  styleUrls: ['./filter-bar.component.css']\n})], FilterBarComponent);","map":{"version":3,"names":["Component","Input","Output","EventEmitter","FilterBarComponent","constructor","cards","filteredData","searchTerm","selectedTitle","selectedStatus","selectedDate","uniqueTitles","uniqueStatus","filteredCards","ngOnInit","Set","map","card","title","status","applyFilters","filter","toLowerCase","includes","from","Date","dueDate","toDateString","emit","exportToHTML","table","to","text","join","blob","Blob","type","a","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\safia\\submissions_map\\submissions_map\\src\\app\\filter-bar\\filter-bar.component.ts"],"sourcesContent":["// filter-bar.component.ts\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-bar',\n  templateUrl: './filter-bar.component.html',\n  styleUrls: ['./filter-bar.component.css'],\n})\nexport class FilterBarComponent implements OnInit {\n  @Input() cards: any[] = []; // Change the type to an array of cards\n  @Output() filteredData = new EventEmitter<any[]>();\n\n  searchTerm: string = '';\n  selectedTitle: string = '';\n  selectedStatus: string = '';\n  selectedDate: string = '';\n\n  uniqueTitles: string[] = [];\n  uniqueStatus: string[] = [];\n  filteredCards: any[] = [];\n\n  ngOnInit(): void {\n    // Populate uniqueTitles and uniqueStatus from cards data\n    this.uniqueTitles = [...new Set(this.cards.map((card) => card.title))];\n    this.uniqueStatus = [...new Set(this.cards.map((card) => card.status))];\n    this.filteredCards = this.cards; // Initialize filteredCards with all cards\n  }\n\n  applyFilters(): void {\n    // Apply filters based on selected criteria\n    this.filteredCards = this.cards\n      .filter((card) =>\n        card.title.toLowerCase().includes(this.selectedTitle.toLowerCase()) ||\n        card.from.toLowerCase().includes(this.searchTerm.toLowerCase())\n      )\n      .filter((card) => !this.selectedStatus || card.status === this.selectedStatus)\n      .filter((card) => !this.selectedDate || new Date(card.dueDate).toDateString() === new Date(this.selectedDate).toDateString());\n\n    // Emit the filtered data to the parent component\n    this.filteredData.emit(this.filteredCards);\n  }\n\n  exportToHTML(): void {\n    // Create a simple HTML table\n    const table = `\n      <table>\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>From</th>\n            <th>To</th>\n            <th>Due Date</th>\n            <th>Status</th>\n            <th>Text</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${this.filteredCards.map(card => `\n            <tr>\n              <td>${card.title}</td>\n              <td>${card.from}</td>\n              <td>${card.to}</td>\n              <td>${card.dueDate}</td>\n              <td>${card.status}</td>\n              <td>${card.text}</td>\n            </tr>\n          `).join('')}\n        </tbody>\n      </table>\n    `;\n\n    // Create a Blob containing the HTML table\n    const blob = new Blob([table], { type: 'text/html' });\n\n    // Create a download link\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = 'exported_data.html';\n\n    // Append the link to the body and trigger the click event\n    document.body.appendChild(a);\n    a.click();\n\n    // Remove the link from the body\n    document.body.removeChild(a);\n  }\n  }\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}